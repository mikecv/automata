syntax = "proto3";

package ui;


// *****************************************
// User Interface message service
// *****************************************
service UiMessages {
  rpc GetControllerStatus (ControllerStatusCmd) returns (ControllerStatusResp) {}
}

// UI commands
enum UiCmd {
  U_NONE = 0;
  U_CNTRL_STATUS = 1;
}

// UI command response status
enum StatusCmdStatus {
  US_NONE = 0;
  US_GOOD = 1;
  US_UNEXPECTED_CMD = 98;
  US_SERVER_EXCEPTION = 99;
}


// Get controller status COMMAND message.
message ControllerStatusCmd {
  UiCmd cmd = 1;
}


// Get controller status RESPONSE message.
message ControllerStatusResp {
  StatusCmdStatus status = 1;
  string name = 2;
  string state = 3;
  string cTime = 4;
  string mode = 5;
  string program = 6;
  string outputs = 7;
}


// *****************************************
// User Interface control service
// *****************************************
service UiControlMode {
  rpc SetControllerMode (SetControllerModeCmd) returns (SetControllerModeResp) {}
}

// UI mode controls
enum UiModeControl {
  C_NONE = 0;
  C_SET_MODE = 1;
}


// UI mode controls response status
enum UiModeStatus {
  CS_NONE = 0;
  CS_GOOD = 1;
  CS_MODE_NA = 2;
  CS_MODE_FAIL = 3;
  CS_UNEXPECTED_CMD = 98;
  CS_SERVER_EXCEPTION = 99;
}


// Set controller mode COMMAND message.
message SetControllerModeCmd {
  UiModeControl cmd = 1;
  string reqMode = 2;
}


// Set controller mode RESPONSE message.
message SetControllerModeResp {
  UiModeControl status = 1;
  string setMode = 2;
  string reason = 3;
}
